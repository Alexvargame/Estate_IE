# Generated by Django 5.0.7 on 2025-04-15 09:07

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('property', '0005_rename_infrastucture_property_infrastructure'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='PropertySearchRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('min_price', models.DecimalField(decimal_places=2, default=0.0, max_digits=15)),
                ('max_price', models.DecimalField(decimal_places=2, default=100000000.0, max_digits=15)),
                ('min_total_area', models.DecimalField(decimal_places=2, default=0.0, max_digits=15)),
                ('max_total_area', models.DecimalField(decimal_places=2, default=10000.0, max_digits=15)),
                ('min_rooms_count', models.IntegerField(default=0)),
                ('max_rooms_count', models.IntegerField(default=10)),
                ('min_total_floor', models.IntegerField(default=0)),
                ('max_total_floors', models.IntegerField(default=0)),
                ('has_balcony', models.BooleanField(default=False)),
                ('additional_requirements', models.TextField(blank=True, null=True)),
                ('min_created_at', models.DateField()),
                ('max_created_at', models.DateField()),
                ('building_type', models.ManyToManyField(related_name='search_building_type', to='property.buildingtype')),
                ('district', models.ManyToManyField(related_name='search_district', to='property.district')),
                ('property_type', models.ManyToManyField(related_name='search_property_type', to='property.propertytype')),
                ('repair_state_id', models.ManyToManyField(related_name='search_repair_state', to='property.repairstate')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_requests', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Поисковый запрос',
                'verbose_name_plural': 'Поисковые запросы',
            },
        ),
    ]
